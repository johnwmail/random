name: Deploy to AWS Lambda

on:
  push:
    branches:
      - 'deploy/lambda'

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Download deps
        run: go mod download

      - name: Build Lambda bootstrap
        run: |
          BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          COMMIT=${GITHUB_SHA}
          VERSION=${GITHUB_REF_NAME}
          go build -trimpath -ldflags "-s -w -X main.buildTime=${BUILD_TIME} -X main.commitHash=${COMMIT} -X main.version=${VERSION}" -o bootstrap main.go

      - name: Prepare code artifacts
        run: |
          mkdir -p lambda-artifacts
          mv -f bootstrap lambda-artifacts/bootstrap
          ls -l lambda-artifacts

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check Lambda function name secret
        run: |
          if [ -z "${{ secrets.LAMBDA_FUNCTION_NAME }}" ]; then
            echo "LAMBDA_FUNCTION_NAME secret is required" >&2
            exit 1
          fi

      - name: Deploy Lambda Function
        id: lambda-deploy
        uses: aws-actions/aws-lambda-deploy@v1
        with:
          function-name: ${{ secrets.LAMBDA_FUNCTION_NAME }}
          code-artifacts-dir: lambda-artifacts
          architectures: x86_64
          runtime: provided.al2023
          handler: bootstrap
          publish: true

      - name: Post-deploy info
        run: |
          echo "Function ARN: ${{ steps.lambda-deploy.outputs.function-arn }}"
          echo "Version:      ${{ steps.lambda-deploy.outputs.version }}"
